facet_wrap(~workerID, ncol=4)
# Average across subjects
food.summary <- summarySE(food, measurevar="probability",
groupvars=c("food", "quantifier", "eatenQuant"))
ggplot(food.summary, aes(x=eatenQuant, y=probability, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=probability-se, ymax=probability+se), width=0.05) +
theme_bw() +
facet_grid(.~food)
priors.summary <- read.csv("../data//priors//priorMeans_v2.csv")
priors.summary$X <- NULL
priors.summary$quantifier <- "prior"
food.summary <- rbind(food.summary, priors.summary)
head(food.summary)
head(priors.summary)
priors.summary$totalQuant <- NULL
food.summary <- rbind(food.summary, priors.summary)
head(food.summary)
ggplot(food.summary, aes(x=eatenQuant, y=probability, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=probability-se, ymax=probability+se), width=0.05) +
theme_bw() +
facet_grid(.~food)
ggplot(affect.summary, aes(x=eatenQuant, y=difference, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(food~affect) +
theme_bw() +
scale_color_manual(values=c("#ff6666", "#66cccc", "gray"))
ggplot(food.summary, aes(x=eatenQuant, y=probability, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=probability-se, ymax=probability+se), width=0.05) +
theme_bw() +
facet_grid(.~food) +
scale_color_manual(values=c("#ff6666", "#66cccc", "gray"))
library(ggplot2)
library(reshape2)
library(plyr)
source("~/Dropbox/Work/Grad_school/Research/Utilities/summarySE.R")
affect <- read.csv("../data/hyperbole-affect/long_v3.csv")
# drop rows that contain null value
affect <- subset(affect, surprised!="null")
affect$eatenQuant <- factor(affect$eatenQuant)
affect.long <- melt(data=affect, id.vars=c("workerID", "gender", "age", "income", "language", "order", "personA", "personB",
"food", "totalQuant", "eatenQuant", "quantifier"),
measure.vars=c("upset", "happy", "surprised", "neutral"))
colnames(affect.long)[13] <- "affect"
colnames(affect.long)[14] <- "probAffect"
affect.summary <- summarySE(affect.long, measurevar="probAffect", groupvars=c("food", "eatenQuant", "quantifier", "affect"))
ggplot(affect.summary, aes(x=eatenQuant, y=probAffect, color=quantifier))+
geom_point() +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=probAffect-se, ymax=probAffect+se), width=0.05) +
facet_grid(food~affect) +
theme_bw()
head(affect)
head(affect.long)
affect.s.means <- aggregate(data=affect.long, probAffect ~ workerID, FUN=mean)
affect.s.sds <- aggregate(data=affect.long, probAffect ~ workerID, FUN=sd)
head(affect.s.means)
colnames(affect.s.means)[2] <- "subjectMean"
colnames(affect.s.sds)[2] <- "subjectSDs"
affect.long <- join(affect.long, affect.s.means, by="workerID")
affect.long <- join(affect.long, affect.s.sds, by="workerID")
head(affect.long)
affect.long$zscored <- (affect.long$probAffect - affect.long$subjectMean) / affect.long$subjectSDs
head(affect.long)
?pnorm
pnorm(0.05)
qnorm(0.05)
qnorm(0.025)
pnorm(0)
pnorm(1)
affect.long$probit <- pnorm(affect.long$zscored)
head(affect.long)
affect.summary <- summarySE(affect.long, measurevar="probit", groupvars=c("food", "eatenQuant", "quantifier", "affect"))
ggplot(affect.summary, aes(x=eatenQuant, y=probAffect, color=quantifier))+
geom_point() +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=probAffect-se, ymax=probAffect+se), width=0.05) +
facet_grid(food~affect) +
theme_bw()
affect.summary <- summarySE(affect.long, measurevar="probit", groupvars=c("food", "eatenQuant", "quantifier", "affect"))
ggplot(affect.summary, aes(x=eatenQuant, y=probit, color=quantifier))+
geom_point() +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=probit-se, ymax=probit+se), width=0.05) +
facet_grid(food~affect) +
theme_bw()
affect.summary <- summarySE(affect.long, measurevar="probAffect", groupvars=c("food", "eatenQuant", "quantifier", "affect"))
ggplot(affect.summary, aes(x=eatenQuant, y=probAffect, color=quantifier))+
geom_point() +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=probAffect-se, ymax=probAffect+se), width=0.05) +
facet_grid(food~affect) +
theme_bw()
affect.summary <- summarySE(affect.long, measurevar="probit", groupvars=c("food", "eatenQuant", "quantifier", "affect"))
ggplot(affect.summary, aes(x=eatenQuant, y=probit, color=quantifier))+
geom_point() +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=probit-se, ymax=probit+se), width=0.05) +
facet_grid(food~affect) +
theme_bw()
affect.priors <- read.csv("../data/affectPriors/long_v2.csv")
affect.priors$totalQuant <- factor(affect.priors$totalQuant)
affect.priors$eatenQuant <- factor(affect.priors$eatenQuant)
affect.priors$food <- factor(affect.priors$food, levels=c("M&M's", "cookies", "pies"))
affect.priors.long <- melt(data=affect.priors, id.vars=c("workerID", "gender", "age", "income", "language",
"order", "personA", "personB",  "food", "totalQuant", "eatenQuant"),
measure.vars=c("upset", "happy", "surprised", "neutral"))
colnames(affect.priors.long)[12] <- "affect"
colnames(affect.priors.long)[13] <- "probAffect"
head(affect.priors.long)
affect.priors.s.means <- aggregate(data=affect.priors.long, probAffect ~ workerID)
affect.priors.s.means <- aggregate(data=affect.priors.long, probAffect ~ workerID, FUN=mean)
affect.priors.s.sds <- aggregate(data=affect.priors.long, probAffect ~ workerID, FUN=sd)
colnames(affect.priors.s.sds)[2] <- "subectSDs"
affect.priors.long <- join(affect.priors.long, affect.priors.s.means, by=c("workerID"))
affect.priors.long <- join(affect.priors.long, affect.priors.s.sds, by=c("workerID"))
head(affect.priors.long)
affect.priors <- read.csv("../data/affectPriors/long_v2.csv")
affect.priors$totalQuant <- factor(affect.priors$totalQuant)
affect.priors$eatenQuant <- factor(affect.priors$eatenQuant)
affect.priors$food <- factor(affect.priors$food, levels=c("M&M's", "cookies", "pies"))
affect.priors.long <- melt(data=affect.priors, id.vars=c("workerID", "gender", "age", "income", "language",
"order", "personA", "personB",  "food", "totalQuant", "eatenQuant"),
measure.vars=c("upset", "happy", "surprised", "neutral"))
colnames(affect.priors.long)[12] <- "affect"
colnames(affect.priors.long)[13] <- "probAffect"
affect.priors.s.means <- aggregate(data=affect.priors.long, probAffect ~ workerID, FUN=mean)
affect.priors.s.sds <- aggregate(data=affect.priors.long, probAffect ~ workerID, FUN=sd)
colnames(affect.priors.s.means)[2] <- "subjectMeans"
colnames(affect.priors.s.sds)[2] <- "subectSDs"
affect.priors.long <- join(affect.priors.long, affect.priors.s.means, by=c("workerID"))
affect.priors.long <- join(affect.priors.long, affect.priors.s.sds, by=c("workerID"))
head(affect.priors.long)
affect.priors.long$zscore <- (affect.priors.long$probAffect - affect.priors.long$subjectMeans) / affect.priors.long$subectSDs
affect.priors.long$probit <- pnorm(affect.priors.long$zscore)
affect.priors.summary <- summarySE(affect.priors.long, measurevar="probit",
groupvars=c("food", "totalQuant", "eatenQuant", "affect"))
ggplot(affect.priors.summary, aes(x=eatenQuant, y=probAffect)) +
#geom_bar(stat="identity", color="black") +
geom_point(size=2, color="black") +
geom_line(aes(group=totalQuant), color="grey") +
geom_errorbar(aes(ymin=probAffect-se, ymax=probAffect+se), width=0.05) +
facet_grid(affect ~ food) +
theme_bw()
affect.priors.summary <- summarySE(affect.priors.long, measurevar="probAffect",
groupvars=c("food", "totalQuant", "eatenQuant", "affect"))
ggplot(affect.priors.summary, aes(x=eatenQuant, y=probAffect)) +
#geom_bar(stat="identity", color="black") +
geom_point(size=2, color="black") +
geom_line(aes(group=totalQuant), color="grey") +
geom_errorbar(aes(ymin=probAffect-se, ymax=probAffect+se), width=0.05) +
facet_grid(affect ~ food) +
theme_bw()
affect.priors.summary <- summarySE(affect.priors.long, measurevar="probit",
groupvars=c("food", "totalQuant", "eatenQuant", "affect"))
ggplot(affect.priors.summary, aes(x=eatenQuant, y=probit)) +
#geom_bar(stat="identity", color="black") +
geom_point(size=2, color="black") +
geom_line(aes(group=totalQuant), color="grey") +
geom_errorbar(aes(ymin=probit-se, ymax=probit+se), width=0.05) +
facet_grid(affect ~ food) +
theme_bw()
write.csv(affect.priors.summary, "../data/affectPriors/affectPriors_v2.csv")
head(affect.priors.long)
write.csv(affect.priors.long, "../data/affectPriors/affectPriors_v2_probit.csv")
model <- read.csv("../model/models_basic_output/1.csv")
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
ggplot(model.state, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
model.upset <- aggregate(data=model, probability ~  food + quantifier + eatenQuant + upset, FUN=sum)
model.upset <- subset(join(model.upset, model.state, by=c("food", "quantifier", "eatenQuant")), upset==1)
model.upset$probAffect <- model.upset$probability / model.upset$stateProb
ggplot(model.upset, aes(x=eatenQuant, y=probAffect, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
model <- read.csv("../model/models_basic_output/2.csv")
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
ggplot(model.state, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
head(model.state)
models.state <- data.frame(food=NULL, quantifier=NULL, eatenQuant=NULL, stateProb=NULL)
models.state <- data.frame(food=NULL, quantifier=NULL, eatenQuant=NULL, stateProb=NULL, modelNum=NULL)
for (i=1; i <= 10; i++) {
model <- read.csv(paste("../model/models_basic_output/", i, ".csv", sep="")
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
model.state$modelNum <- i
models.state <- rbind(models.state, model.state)
}
models.state <- data.frame(food=NULL, quantifier=NULL, eatenQuant=NULL, stateProb=NULL, modelNum=NULL)
for (i in 1:10) {
model <- read.csv(paste("../model/models_basic_output/", i, ".csv", sep="")
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
model.state$modelNum <- i
models.state <- rbind(models.state, model.state)
}
models.state <- data.frame(food=NULL, quantifier=NULL, eatenQuant=NULL, stateProb=NULL, modelNum=NULL)
for (i in 1:10) {
model <- read.csv(paste("../model/models_basic_output/", i, ".csv", sep="")
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
models.state <- data.frame(food=NULL, quantifier=NULL, eatenQuant=NULL, stateProb=NULL, modelNum=NULL)
for (i in 1:10) {
model <- read.csv(paste("../model/models_basic_output/", i, ".csv", sep=""))
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
model.state$modelNum <- i
models.state <- rbind(models.state, model.state)
}
head(models.state)
models.state <- data.frame(food=NULL, quantifier=NULL, eatenQuant=NULL, stateProb=NULL, modelNum=NULL)
for (i in 1:1000) {
model <- read.csv(paste("../model/models_basic_output/", i, ".csv", sep=""))
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
model.state$modelNum <- i
models.state <- rbind(models.state, model.state)
}
models.state.summary <- summarySE(models.state, measurevar="stateProb", groupvars=c("food", "quantifier", "eatenQuant"))
ggplot(models.state.summary, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_errorbar(aes(ymin=stateProb-se, ymax=stateProb+se))+
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
ggplot(models.state.summary, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_errorbar(aes(ymin=stateProb-se, ymax=stateProb+se), width=0.05)+
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
ggplot(models.state.summary, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_errorbar(aes(ymin=stateProb-se, ymax=stateProb+se), width=0.2)+
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
ggplot(models.state.summary, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_errorbar(aes(ymin=stateProb-ci, ymax=stateProb+ci), width=0.2)+
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
model.upset <- aggregate(data=model, probability ~  food + quantifier + eatenQuant + upset, FUN=sum)
model.upset <- subset(join(model.upset, model.state, by=c("food", "quantifier", "eatenQuant")), upset==1)
model.upset$probAffect <- model.upset$probability / model.upset$stateProb
ggplot(model.upset, aes(x=eatenQuant, y=probAffect, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
head(model.upset)
models.upset <- data.frame(food=NULL, quantifier=NULL, eatenQuant=NULL, probability=NULL, probAffect=NULL, stateProb=NULL, modelNum=NULL)
for (i in 1:1000) {
model <- read.csv(paste("../model/models_basic_output/", i, ".csv", sep=""))
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.upset <- aggregate(data=model, probability ~  food + quantifier + eatenQuant + upset, FUN=sum)
model.upset <- subset(join(model.upset, model.state, by=c("food", "quantifier", "eatenQuant")), upset==1)
model.upset$probAffect <- model.upset$probability / model.upset$stateProb
model.upset$modelNum <- i
models.upset <- rbind(models.upset, model.upset)
}
ggplot(food, aes(x=eatenQuant, y=probability, color=quantifier, shape=food)) +
geom_point(size=2) +
geom_line(aes(group=food)) +
theme_bw() +
facet_wrap(~workerID, ncol=4)
model <- read.csv("../model/models_one_output/means.csv")
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
model.state$modelNum <- i
models.state <- rbind(models.state, model.state)
ggplot(model.state, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_errorbar(aes(ymin=stateProb-ci, ymax=stateProb+ci), width=0.2)+
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
model <- read.csv("../model/models_one_output/means.csv")
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
ggplot(model.state, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
ggplot(food.summary, aes(x=eatenQuant, y=probability, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=probability-se, ymax=probability+se), width=0.05) +
theme_bw() +
facet_grid(.~food) +
scale_color_manual(values=c("#ff6666", "#66cccc", "gray"))
model <- read.csv("../model/models_one_none_output/means.csv")
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
ggplot(model.state, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
model <- read.csv("../model/models_one_none_output/means.csv")
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
ggplot(model.state, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
model <- read.csv("../model/models_one_output/means.csv")
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
ggplot(model.state, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
model <- read.csv("../model/models_uniform_output/means.csv")
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
ggplot(model.state, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
model <- read.csv("../model/models_uniform_output/means.csv")
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
ggplot(model.state, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
model.upset <- aggregate(data=model, probability ~  food + quantifier + eatenQuant + upset, FUN=sum)
model.upset <- subset(join(model.upset, model.state, by=c("food", "quantifier", "eatenQuant")), upset==1)
model.upset$probAffect <- model.upset$probability / model.upset$stateProb
ggplot(model.upset, aes(x=eatenQuant, y=probAffect, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
head(model.upset)
model.happy <- aggregate(data=model, probability ~  food + quantifier + eatenQuant + happy, FUN=sum)
model.happy <- subset(join(model.happy, model.state, by=c("food", "quantifier", "eatenQuant")), happy==1)
model.happy$probAffect <- model.happy$probability / model.happy$stateProb
ggplot(model.happy, aes(x=eatenQuant, y=probAffect, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
model.surprised <- aggregate(data=model, probability ~  food + quantifier + eatenQuant + surprised, FUN=sum)
model.surprised <- subset(join(model.surprised, model.state, by=c("food", "quantifier", "eatenQuant")), surprised==1)
model.surprised$probAffect <- model.surprised$probability / model.surprised$stateProb
ggplot(model.surprised, aes(x=eatenQuant, y=probAffect, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
model <- read.csv("../model/models_full_output/means.csv")
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
ggplot(model.state, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
model <- read.csv("../model/models_full_output/means.csv")
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
ggplot(model.state, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
model <- read.csv("../model/models_full_output/means.csv")
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
ggplot(model.state, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
model <- read.csv("../model/models_full_output/means.csv")
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
ggplot(model.state, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
model <- read.csv("../model/models_full_output/means.csv")
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
ggplot(model.state, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
model <- read.csv("../model/models_full_output/means.csv")
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
ggplot(model.state, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
ggplot(affect.priors.summary, aes(x=eatenQuant, y=probit)) +
#geom_bar(stat="identity", color="black") +
geom_point(size=2, color="black") +
geom_line(aes(group=totalQuant), color="grey") +
geom_errorbar(aes(ymin=probit-se, ymax=probit+se), width=0.05) +
facet_grid(affect ~ food) +
theme_bw()
ggplot(affect.priors.summary, aes(x=eatenQuant, y=probit)) +
#geom_bar(stat="identity", color="black") +
geom_point(size=2, color="black") +
geom_line(aes(group=totalQuant), color="grey") +
geom_errorbar(aes(ymin=probit-se, ymax=probit+se), width=0.05) +
facet_grid(affect ~ food) +
theme_bw()
model <- read.csv("../model/models_full_output/means.csv")
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
ggplot(model.state, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
model <- read.csv("../model/models_full_output/means.csv")
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
ggplot(model.state, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()
ggplot(food.summary, aes(x=eatenQuant, y=probability, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=probability-se, ymax=probability+se), width=0.05) +
theme_bw() +
facet_grid(.~food) +
scale_color_manual(values=c("#ff6666", "#66cccc", "gray"))
model <- read.csv("../model/models_full_output/means.csv")
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model$eatenQuant <- factor(model$eatenQuant)
model.state <- aggregate(data=model, probability ~ food + quantifier + eatenQuant, FUN=sum)
colnames(model.state)[4] <- "stateProb"
ggplot(model.state, aes(x=eatenQuant, y=stateProb, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(.~food) +
theme_bw()

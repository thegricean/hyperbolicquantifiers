))
head(style.prof.long)
ggplot(style.prof.long, aes(x=year, y=concreteness, color=Type, shape=imagist)) +
geom_point(size=3) +
facet_grid(.~variable) +
theme_bw() +
scale_shape_manual(values=c(1, 17), labels=c("Other", "Imagist"), name="") +
scale_color_manual(values=c("#023858", "#fb9a99"), labels=c("19th", "Contemporary"), name="") +
xlab("Year born") +
ylab("Concreteness (z-scored)")
ggplot(style.prof.long, aes(x=year, y=value, color=Type, shape=imagist)) +
geom_point(size=3) +
facet_grid(.~variable) +
theme_bw() +
scale_shape_manual(values=c(1, 17), labels=c("Other", "Imagist"), name="") +
scale_color_manual(values=c("#023858", "#fb9a99"), labels=c("19th", "Contemporary"), name="") +
xlab("Year born") +
ylab("Concreteness (z-scored)")
ggplot(style.prof.long, aes(x=year, y=value, color=Type, shape=imagist)) +
geom_point(size=3) +
facet_grid(variable ~.) +
theme_bw() +
scale_shape_manual(values=c(1, 17), labels=c("Other", "Imagist"), name="") +
scale_color_manual(values=c("#023858", "#fb9a99"), labels=c("19th", "Contemporary"), name="") +
xlab("Year born") +
ylab("Concreteness (z-scored)")
style.prof.long <- melt(data=style.prof, id.vars=c("Type", "Poem.poet", "year", "imagist", "time", "expertise"),
measure.vars=c(#"wordLength",
#"wordFreq",
#"alliterationFreq",
#"assonanceFreq",
#"consonanceFreq",
#"slantEndRhymeFreq",
#"perfectEndRhymeFreq",
#"identityEndRhymeFreq",
#"emotWords",
#"valence",
#"arousal",
#"typeTokenRatio",
"concreteness",
"imageability"
#"objectWords",
#"abstractWords",
))
ggplot(style.prof.long, aes(x=year, y=value, color=Type, shape=imagist)) +
geom_point(size=3) +
facet_grid(variable ~.) +
theme_bw() +
scale_shape_manual(values=c(1, 17), labels=c("Other", "Imagist"), name="") +
scale_color_manual(values=c("#023858", "#fb9a99"), labels=c("19th", "Contemporary"), name="") +
xlab("Year born") +
ylab("Concreteness (z-scored)")
t.test(style.19.non$imageability, style.19.imagist$imageability)
style.19.non <- subset(style.19, imagist=="no")
style.19.imagist <- subset(style.19, imagist=="yes")
t.test(style.19.non$imageability, style.19.imagist$imageability)
t.test(style.19$imageability, style.21$imageability)
t.test(style.19.imagist$imageability, style.21$imageability)
style.prof.long <- melt(data=style.prof, id.vars=c("Type", "Poem.poet", "year", "imagist", "time", "expertise"),
measure.vars=c(#"wordLength",
#"wordFreq",
"alliterationFreq",
"assonanceFreq",
"consonanceFreq",
"slantEndRhymeFreq",
"perfectEndRhymeFreq",
"identityEndRhymeFreq"
#"emotWords",
#"valence",
#"arousal",
#"typeTokenRatio",
#"concreteness",
#"imageability"
#"objectWords",
#"abstractWords",
))
ggplot(style.prof.long, aes(x=year, y=value, color=Type, shape=imagist)) +
geom_point(size=3) +
facet_grid(variable ~.) +
theme_bw() +
scale_shape_manual(values=c(1, 17), labels=c("Other", "Imagist"), name="") +
scale_color_manual(values=c("#023858", "#fb9a99"), labels=c("19th", "Contemporary"), name="") +
xlab("Year born") +
ylab("Concreteness (z-scored)")
style.prof.long <- melt(data=style.prof, id.vars=c("Type", "Poem.poet", "year", "imagist", "time", "expertise"),
measure.vars=c(#"wordLength",
#"wordFreq",
"alliterationFreq",
"assonanceFreq",
#"consonanceFreq",
"slantEndRhymeFreq",
"perfectEndRhymeFreq",
#"identityEndRhymeFreq"
#"emotWords",
#"valence",
#"arousal",
#"typeTokenRatio",
#"concreteness",
#"imageability"
#"objectWords",
#"abstractWords",
))
ggplot(style.prof.long, aes(x=year, y=value, color=Type, shape=imagist)) +
geom_point(size=3) +
facet_grid(variable ~.) +
theme_bw() +
scale_shape_manual(values=c(1, 17), labels=c("Other", "Imagist"), name="") +
scale_color_manual(values=c("#023858", "#fb9a99"), labels=c("19th", "Contemporary"), name="") +
xlab("Year born") +
ylab("Concreteness (z-scored)")
style.prof.long <- melt(data=style.prof, id.vars=c("Type", "Poem.poet", "year", "imagist", "time", "expertise"),
measure.vars=c(#"wordLength",
#"wordFreq",
"alliterationFreq",
"assonanceFreq",
#"consonanceFreq",
"slantEndRhymeFreq",
"perfectEndRhymeFreq"
#"identityEndRhymeFreq"
#"emotWords",
#"valence",
#"arousal",
#"typeTokenRatio",
#"concreteness",
#"imageability"
#"objectWords",
#"abstractWords",
))
ggplot(style.prof.long, aes(x=year, y=value, color=Type, shape=imagist)) +
geom_point(size=3) +
facet_grid(variable ~.) +
theme_bw() +
scale_shape_manual(values=c(1, 17), labels=c("Other", "Imagist"), name="") +
scale_color_manual(values=c("#023858", "#fb9a99"), labels=c("19th", "Contemporary"), name="") +
xlab("Year born") +
ylab("Concreteness (z-scored)")
measure.summary <- summarySE(style, measurevar="concreteness", groupvars=c("time", "expertise"))
colnames(measure.summary)[4] <- "measure"
# for plotting purposes
dummy <- measure.summary[1,]
dummy$expertise <- "amateur"
measure.summary <- rbind(measure.summary, dummy)
ggplot(measure.summary, aes(x=time, y=measure, shape=expertise, color=time)) +
geom_line(aes(group=expertise, linetype=expertise), color="gray", size=1) +
geom_point(size=6) +
geom_errorbar(aes(ymin=measure-se, ymax=measure+se), width=0.05) +
theme_bw() +
scale_shape_manual(values=c(10, 19)) +
scale_linetype_manual(values=c(3, 2)) +
scale_color_manual(values=c("#023858", "#fb9a99"))
setwd("~/Dropbox/Work/Grad_school/Research/Hyperbole/hyperbolicquantifiers/rscripts")
d <- read.csv("../data/hyperbole-affect/elicitAffect_long_emoWords.csv")
head(d)
ggplot(d, aes(x=affect)) +
geom_histogram()
ggplot(d, aes(x=affect)) +
geom_histogram() +
facet_grid(.~condition) +
theme_bw()
ggplot(d, aes(x=affect)) +
geom_histogram() +
facet_grid(condition~.) +
theme_bw()
d.trimmed <- subset(d, affect!="none")
ggplot(d.trimmed, aes(x=affect)) +
geom_histogram() +
facet_grid(condition~.) +
theme_bw()
d <- read.csv("../data/hyperbole-affect/elicitAffect_long_emoWords.csv")
d.trimmed <- subset(d, affect!="none")
ggplot(d.trimmed, aes(x=affect)) +
geom_histogram() +
facet_grid(condition~.) +
theme_bw()
count(d$affect)
affect.count <- count(d$affect)
head(affect.count)
d.hyperbolic.count <- count(subset(d.trimmed, condition=="hyperbolic"))
head(d.hyperbolic.count)
d.hyperbolic.count <- count(subset(d.trimmed, condition=="hyperbolic")$affect)
head(d.hyperbolic.count)
?reorder
d.hyperbolic.count <- reorder(d.hyperbolic.count$x, d.hyperbolic.count$freq)
head(d.hyperbolic.count)
d.hyperbolic.count$x <- reorder(d.hyperbolic.count$x, d.hyperbolic.count$freq)
d.hyperbolic.count <- count(subset(d.trimmed, condition=="hyperbolic")$affect)
d.hyperbolic.count$x <- reorder(d.hyperbolic.count$x, d.hyperbolic.count$freq)
head(d.hyperbolic.count)
d.hyperbolic.count <- count(subset(d.trimmed, condition=="hyperbolic")$affect)
?factor
d.hyperbolic.count$x <- factor(d.hyperbolic.count$x, levels=reorder(d.hyperbolic.count$x, d.hyperbolic.count$freq))
d.hyperbolic.count$x <- factor(d.hyperbolic.count$x, levels=reorder(d.hyperbolic.count$x, d.hyperbolic.count$freq))
d.hyperbolic.count$x <- factor(d.hyperbolic.count$x, levels=reorder(d.hyperbolic.count$x, d.hyperbolic.count$freq))
head(d.hyperbolic.count)
d <- read.csv("../data/hyperbole-affect/elicitAffect_long_emoWords.csv")
d.trimmed <- subset(d, affect!="none")
d.hyperbolic.count <- count(subset(d.trimmed, condition=="hyperbolic")$affect)
d.hyperbolic.count$x <- factor(d.hyperbolic.count$x, levels=reorder(d.hyperbolic.count$x, d.hyperbolic.count$freq))
head(d.hyperbolic.count)
reorder(d.hyperbolic.count$x, d.hyperbolic.count$freq)
d.hyperbolic.count <- count(subset(d.trimmed, condition=="hyperbolic")$affect)
head(d.hyperbolic.count)
d.hyperbolic.count$newOrder <- reorder(d.hyperbolic.count$x, d.hyperbolic.count$freq)
head(d.hyperbolic.count)
d.hyperbolic.count$x <- factor(d.hyperbolic.count$x)
d.hyperbolic.count$newOrder <- reorder(d.hyperbolic.count$x, d.hyperbolic.count$freq)
head(d.hyperbolic.count)
d <- read.csv("../data/hyperbole-affect/elicitAffect_long_emoWords.csv")
d.trimmed <- subset(d, affect!="none")
d$affect <- factor(d$affect, levels=names(d[order(d, decreasing = TRUE)]))
d.hyperbolic.count <- count(subset(d.trimmed, condition=="hyperbolic")$affect)
d <- read.csv("../data/hyperbole-affect/affect_long.csv")
head(d)
d.long <- melt(data=d, id.vars=c("workerID", "gender", "age", "income", "language", "condition", "order", "personA", "personB",
"food", "totalQuant", "eatenQuant", "preciseEatenQuant", "quantifier"),
measure.vars=c("upset", "annoyed", "angry", "disgusted", "excited", "happy", "surprised"))
d <- read.csv("../data/hyperbole-affect/affect_long.csv")
d.long <- melt(data=d, id.vars=c("workerID", "gender", "age", "income", "language", "condition", "order", "personA", "personB",
"food", "totalQuant", "eatenQuant", "preciseEatenQuant", "quantifier"),
measure.vars=c("upset", "annoyed", "angry", "disgusted", "excited", "happy", "surprised"))
head(d.long)
colnames(d.long)[15] <- "emotion"
colnames(d.long)[16] <- "rating"
head(d.long)
d.summary <- summarySE(d.long, measurevar=c("rating"),
groupvars=c("condition", "totalQuant", "food", "eatenQuant", "quantifier", "emotion"))
levels(d$condition)
d.summary <- summarySE(d.long, measurevar=c("rating"),
groupvars=c("condition", "totalQuant", "eatenQuant", "emotion"))
ggplot(d.summary, aes(x=eatenQuant, y=rating, color=emotion)) +
geom_point(size=3) +
geom_errorbar(aes(ymin=rating-se, ymax=rating+se), width=0.2) +
theme_bw() +
facet_grid(condition ~ totalQuant)
ggplot(d.summary, aes(x=eatenQuant, y=rating, color=condition)) +
geom_point(size=3) +
geom_errorbar(aes(ymin=rating-se, ymax=rating+se), width=0.2) +
theme_bw() +
facet_grid(totalQuant~emotion)
d.summary <- summarySE(d.long, measurevar=c("rating"),
groupvars=c("condition", "eatenQuant", "emotion"))
ggplot(d.summary, aes(x=eatenQuant, y=rating, color=condition)) +
geom_point(size=3) +
geom_errorbar(aes(ymin=rating-se, ymax=rating+se), width=0.2) +
theme_bw() +
facet_grid(.~emotion)
d$eatenQuant <- factor(d$eatenQuant)
d.long <- melt(data=d, id.vars=c("workerID", "gender", "age", "income", "language", "condition", "order", "personA", "personB",
"food", "totalQuant", "eatenQuant", "preciseEatenQuant", "quantifier"),
measure.vars=c("upset", "annoyed", "angry", "disgusted", "excited", "happy", "surprised"))
colnames(d.long)[15] <- "emotion"
colnames(d.long)[16] <- "rating"
d.summary <- summarySE(d.long, measurevar=c("rating"),
groupvars=c("condition", "eatenQuant", "emotion"))
ggplot(d.summary, aes(x=eatenQuant, y=rating, color=condition)) +
geom_point(size=3) +
geom_errorbar(aes(ymin=rating-se, ymax=rating+se), width=0.2) +
theme_bw() +
facet_grid(.~emotion)
ggplot(d.summary, aes(x=eatenQuant, y=rating, color=condition)) +
geom_point(size=3) +
geom_line(aes(group=condition)) +
geom_errorbar(aes(ymin=rating-se, ymax=rating+se), width=0.2) +
theme_bw() +
facet_grid(.~emotion)
?facet_grid
d$eatenQuant <- factor(d$eatenQuant, labels=c("30%", "80%", "100%"))
d.long <- melt(data=d, id.vars=c("workerID", "gender", "age", "income", "language", "condition", "order", "personA", "personB",
"food", "totalQuant", "eatenQuant", "preciseEatenQuant", "quantifier"),
measure.vars=c("upset", "annoyed", "angry", "disgusted", "excited", "happy", "surprised"))
colnames(d.long)[15] <- "emotion"
colnames(d.long)[16] <- "rating"
d.summary <- summarySE(d.long, measurevar=c("rating"),
groupvars=c("condition", "eatenQuant", "emotion"))
ggplot(d.summary, aes(x=eatenQuant, y=rating, color=condition)) +
geom_point(size=3) +
geom_line(aes(group=condition)) +
geom_errorbar(aes(ymin=rating-se, ymax=rating+se), width=0.2) +
theme_bw() +
facet_grid(.~emotion)
?facet_wrap
ggplot(d.summary, aes(x=eatenQuant, y=rating, color=condition)) +
geom_point(size=3) +
geom_line(aes(group=condition)) +
geom_errorbar(aes(ymin=rating-se, ymax=rating+se), width=0.2) +
theme_bw() +
facet_grid(.~emotion) +
facet_wrap(ncol=4)
ggplot(d.summary, aes(x=eatenQuant, y=rating, color=condition)) +
geom_point(size=3) +
geom_line(aes(group=condition)) +
geom_errorbar(aes(ymin=rating-se, ymax=rating+se), width=0.2) +
theme_bw() +
facet_grid(.~emotion) +
facet_wrap(ncol=4)
ggplot(d.summary, aes(x=eatenQuant, y=rating, color=condition)) +
geom_point(size=3) +
geom_line(aes(group=condition)) +
geom_errorbar(aes(ymin=rating-se, ymax=rating+se), width=0.2) +
theme_bw() +
facet_grid(.~emotion, ncol=4)
ggplot(d.summary, aes(x=eatenQuant, y=rating, color=condition)) +
geom_point(size=3) +
geom_line(aes(group=condition)) +
geom_errorbar(aes(ymin=rating-se, ymax=rating+se), width=0.2) +
theme_bw() +
facet_wrap(.~emotion, ncol=4)
?facet_wrap
ggplot(d.summary, aes(x=eatenQuant, y=rating, color=condition)) +
geom_point(size=3) +
geom_line(aes(group=condition)) +
geom_errorbar(aes(ymin=rating-se, ymax=rating+se), width=0.2) +
theme_bw() +
facet_wrap(~emotion, ncol=4)
d.summary <- summarySE(d.long, measurevar=c("rating"),
groupvars=c("quantifier", "eatenQuant", "emotion"))
ggplot(d.summary, aes(x=eatenQuant, y=rating, color=quantifier)) +
geom_point(size=3) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=rating-se, ymax=rating+se), width=0.2) +
theme_bw() +
facet_wrap(~emotion, ncol=4)
ggplot(d.summary, aes(x=eatenQuant, y=rating, color=quantifier)) +
geom_point(size=3) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width=0.1) +
theme_bw() +
facet_wrap(~emotion, ncol=4)
d.summary <- summarySE(d.long, measurevar=c("rating"),
groupvars=c("quantifier", "eatenQuant", "emotion", "food"))
ggplot(d.summary, aes(x=eatenQuant, y=rating, color=quantifier)) +
geom_point(size=3) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width=0.1) +
theme_bw() +
#facet_wrap(~emotion, ncol=4)
facet_grid(food ~ emotion)
d.summary <- summarySE(d.long, measurevar=c("rating"),
groupvars=c("quantifier", "eatenQuant", "emotion"))
ggplot(d.summary, aes(x=eatenQuant, y=rating, color=quantifier)) +
geom_point(size=3) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width=0.1) +
theme_bw() +
facet_wrap(~emotion, ncol=4)
#facet_grid(food ~ emotion)
head(d)
with(d, cor.test(upset, annoyed))
cor(d)
d[,10]
View(d)
d[,15:]
d[,15]
d[,15:20]
head(d)
View(d[,15:21])
d.cor.matrix <- as.matrix(cor(d[,15:21]))
d.cor.matrix
head(d)
?d
d$normalizer <- sum(d[,15:21])
head(d)
d$normalizer <- sum(d$upset, d$annoyed)
head(d)
d$normalizer <- d$upset + d$annoyed + d$angry + d$disgusted + d$excited + d$happy + d$surprised
head(d)
d.cor.matrix <- as.matrix(cor(d[,15:21]))
d.cor.matrix
d.long <- melt(data=d, id.vars=c("workerID", "gender", "age", "income", "language", "condition", "order", "personA", "personB",
"food", "totalQuant", "eatenQuant", "preciseEatenQuant", "quantifier", "normalizer"),
measure.vars=c("upset", "annoyed", "angry", "disgusted", "excited", "happy", "surprised"))
colnames(d.long)[16] <- "emotion"
colnames(d.long)[17] <- "rating"
head(d.long)
d$rating.normalized <- d$rating / d$normalizer
head(d)
head(d.long)
d.long <- melt(data=d, id.vars=c("workerID", "gender", "age", "income", "language", "condition", "order", "personA", "personB",
"food", "totalQuant", "eatenQuant", "preciseEatenQuant", "quantifier", "normalizer"),
measure.vars=c("upset", "annoyed", "angry", "disgusted", "excited", "happy", "surprised"))
colnames(d.long)[16] <- "emotion"
colnames(d.long)[17] <- "rating"
# normalized rating
d.long$rating.normalized <- d.long$rating / d$.longnormalizer
d.long <- melt(data=d, id.vars=c("workerID", "gender", "age", "income", "language", "condition", "order", "personA", "personB",
"food", "totalQuant", "eatenQuant", "preciseEatenQuant", "quantifier", "normalizer"),
measure.vars=c("upset", "annoyed", "angry", "disgusted", "excited", "happy", "surprised"))
colnames(d.long)[16] <- "emotion"
colnames(d.long)[17] <- "rating"
# normalized rating
d.long$rating.normalized <- d.long$rating / d.long$normalizer
head(d.long)
d.summary <- summarySE(d.long, measurevar=c("rating.normalized"),
groupvars=c("quantifier", "eatenQuant", "emotion"))
ggplot(d.summary, aes(x=eatenQuant, y=rating.normalized, color=quantifier)) +
geom_point(size=3) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width=0.1) +
theme_bw() +
facet_wrap(~emotion, ncol=4)
ggplot(d.summary, aes(x=eatenQuant, y=rating.normalized, color=quantifier)) +
geom_point(size=3) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=rating.normalized-ci, ymax=rating.normalized+ci), width=0.1) +
theme_bw() +
facet_wrap(~emotion, ncol=4)
d <- read.csv("../data/hyperbole-affect/affect-2_long.csv")
d$eatenQuant <- factor(d$eatenQuant, labels=c("30%", "80%", "100%"))
d$normalizer <- d$upset + d$annoyed + d$angry + d$disgusted + d$excited + d$happy + d$surprised
#############################
# Find correlations among emotion ratings
#############################
d.cor.matrix <- as.matrix(cor(d[,15:21]))
##########################
# Turn to long form
##########################
d.long <- melt(data=d, id.vars=c("workerID", "gender", "age", "income", "language", "condition", "order", "personA", "personB",
"food", "totalQuant", "eatenQuant", "preciseEatenQuant", "quantifier", "normalizer"),
measure.vars=c("upset", "annoyed", "angry", "disgusted", "excited", "happy", "surprised"))
colnames(d.long)[16] <- "emotion"
colnames(d.long)[17] <- "rating"
# normalized rating
d.long$rating.normalized <- d.long$rating / d.long$normalizer
d.summary <- summarySE(d.long, measurevar=c("rating"),
groupvars=c("quantifier", "eatenQuant", "emotion"))
ggplot(d.summary, aes(x=eatenQuant, y=rating, color=quantifier)) +
geom_point(size=3) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width=0.1) +
theme_bw() +
facet_wrap(~emotion, ncol=4)
#facet_grid(food ~ emotion)
d <- read.csv("../data/hyperbole-affect/affect-3_long.csv")
d$eatenQuant <- factor(d$eatenQuant, labels=c("30%", "80%", "100%"))
d$normalizer <- d$upset + d$annoyed + d$angry + d$disgusted + d$excited + d$happy + d$surprised
d.cor.matrix <- as.matrix(cor(d[,15:22]))
d.cor.matrix
d.long <- melt(data=d, id.vars=c("workerID", "gender", "age", "income", "language", "condition", "order", "personA", "personB",
"food", "totalQuant", "eatenQuant", "preciseEatenQuant", "quantifier", "normalizer"),
measure.vars=c("upset", "annoyed", "angry", "disgusted", "excited", "happy", "surprised", "neutral"))
colnames(d.long)[16] <- "emotion"
colnames(d.long)[17] <- "rating"
# normalized rating
d.long$rating.normalized <- d.long$rating / d.long$normalizer
d.summary <- summarySE(d.long, measurevar=c("rating"),
groupvars=c("quantifier", "eatenQuant", "emotion"))
ggplot(d.summary, aes(x=eatenQuant, y=rating, color=quantifier)) +
geom_point(size=3) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width=0.1) +
theme_bw() +
facet_wrap(~emotion, ncol=4)
head(d.long)
d.summary.normalized <- summarySE(d.long, measurevar=c("rating.normalized"),
groupvars=c("quantifier", "eatenQuant", "emotion"))
ggplot(d.summary, aes(x=eatenQuant, y=rating.normalized, color=quantifier)) +
geom_point(size=3) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=rating.normalized-ci, ymax=rating.normalized+ci), width=0.1) +
theme_bw() +
facet_wrap(~emotion, ncol=4)
ggplot(d.summary.normalized, aes(x=eatenQuant, y=rating.normalized, color=quantifier)) +
geom_point(size=3) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=rating.normalized-ci, ymax=rating.normalized+ci), width=0.1) +
theme_bw() +
facet_wrap(~emotion, ncol=4)
ggplot(d.summary, aes(x=eatenQuant, y=rating, color=quantifier)) +
geom_point(size=3) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width=0.1) +
theme_bw() +
facet_wrap(~emotion, ncol=4)
#facet_grid(food ~ emotion)
ggplot(d.long, aes(x=eatenQuant, y=rating, color=emotion)) +
geom_point(size=3) +
theme_bw() +
facet_grid(quantifier ~ workerID)
ggplot(d.long, aes(x=eatenQuant, y=rating, color=quantifier)) +
geom_point(size=3) +
theme_bw() +
facet_grid(emotion ~ workerID)
ggplot(d.long, aes(x=eatenQuant, y=rating.normalized, color=quantifier)) +
geom_point(size=3) +
theme_bw() +
facet_grid(emotion ~ workerID)
d$non.emotion <- (1-d$upset) * (1-d$annoyed) * (1-d$angry) * (1-d$disgusted) * (1-d$excited) * (1-d$happy) * (1-d$surprised)
cor.test(d$non.emotion, d$neutral)
ggplot(d, aes(x=non.emotion, y=neutral, color=quantifier)) +
geom_point(size=2) +
theme_bw()
ggplot(d.summary, aes(x=eatenQuant, y=rating, color=quantifier)) +
geom_point(size=3) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=rating-ci, ymax=rating+ci), width=0.1) +
theme_bw() +
facet_wrap(~emotion, ncol=4)
#facet_grid(food ~ emotion)
d.summary.normalized <- summarySE(d.long, measurevar=c("rating.normalized"),
groupvars=c("quantifier", "eatenQuant", "emotion"))
# Normalized to sum to 1
ggplot(d.summary.normalized, aes(x=eatenQuant, y=rating.normalized, color=quantifier)) +
geom_point(size=3) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=rating.normalized-ci, ymax=rating.normalized+ci), width=0.1) +
theme_bw() +
facet_wrap(~emotion, ncol=4)
cor.test(d$non.emotion, d$neutral)
ggplot(d, aes(x=non.emotion, y=neutral, color=quantifier)) +
geom_point(size=2) +
theme_bw() +
facet_wrap(~workerID, ncol=10)

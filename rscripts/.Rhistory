geom_histogram()
ggplot(aes(x=quantifier), data=r) +
geom_histogram()
head(r$comments)
unique(r$comments)
head(r)
r[r$quantifier == "All",]$explanation
r$ObjectEffect = as.factor(paste(r$object,r$effect))
save(r, file="data/r.RData")
r[r$quantifier == "All",c("ObjectEffect","explanation")]
r[r$quantifier == "short_filler",c("ObjectEffect","explanation")]
r[r$quantifier == "long_filler",c("ObjectEffect","explanation")]
write.table(r[r$quantifier == "All",c("ObjectEffect","explanation")],file="data/explanations_all.tsv",sep="\t",rownames=F,quote="")
write.table(r[r$quantifier == "All",c("ObjectEffect","explanation")],file="data/explanations_all.tsv",sep="\t",row.names=F,quote="")
write.table(r[r$quantifier == "All",c("ObjectEffect","explanation")],file="data/explanations_all.tsv",sep="\t",row.names=F,quote=F)
write.table(r[r$quantifier == "Some",c("ObjectEffect","explanation")],file="data/explanations_some.tsv",sep="\t",row.names=F,quote=F)
write.table(r[r$quantifier == "long_filler",c("ObjectEffect","explanation")],file="data/explanations_longfiller.tsv",sep="\t",row.names=F,quote=F)
write.table(r[r$quantifier == "None",c("ObjectEffect","explanation")],file="data/explanations_none.tsv",sep="\t",row.names=F,quote=F)
d = read.table("~/cogsci/projects/stanford/projects/sinking_marbles/sinking-marbles/experiments/1_sinking-marbles-prior/results/data/sinking-marbles-prior.tsv", sep="\t", header=T)
d$Item = paste(d$effect,d$object)
d$AllState = as.factor(ifelse(d$response == 100,1,0))
t = as.data.frame(prop.table(table(d$AllState,d$Item),mar=2))
t = t[t$Var1 == 1,]
row.names(t) = t$Var2
head(t)
r$AllPrior = t[as.character(r$Item),]$Freq
r$AllPrior = t[paste(r$object,r$effect),]$Freq
t = as.data.frame(prop.table(table(d$response,d$Item),mar=2))
exps = ddply(t, .(Var2), summarize, expectation=sum(as.numeric(as.character(Var1))*Freq))
row.names(exps) = exps$Var2
r$PriorExpectationUnsmoothed = exps[paste(r$object,r$effect),]$expectation/100
save(r, file="data/r.RData")
write.table(r[r$quantifier == "All",c("AllPrior","PriorExpectationUnsmoothed","ObjectEffect","explanation")],file="data/explanations_all.tsv",sep="\t",row.names=F,quote=F)
write.table(r[r$quantifier == "All",c("AllPrior","PriorExpectationUnsmoothed","ObjectEffect","explanation")],file="data/explanations_all.tsv",sep="\t",row.names=F,quote=F)
## WHAT DO PEOPLE SAY ABOUT "SOME"?
write.table(r[r$quantifier == "Some",c("AllPrior","PriorExpectationUnsmoothed","ObjectEffect","explanation")],file="data/explanations_some.tsv",sep="\t",row.names=F,quote=F)
## WHAT DO PEOPLE SAY ABOUT "NONE"?
write.table(r[r$quantifier == "None",c("AllPrior","PriorExpectationUnsmoothed","ObjectEffect","explanation")],file="data/explanations_none.tsv",sep="\t",row.names=F,quote=F)
## WHAT DO PEOPLE SAY ABOUT FILLERS?
write.table(r[r$quantifier == "short_filler",c("AllPrior","PriorExpectationUnsmoothed","ObjectEffect","explanation")],file="data/explanations_shortfiller.tsv",sep="\t",row.names=F,quote=F)
write.table(r[r$quantifier == "long_filler",c("AllPrior","PriorExpectationUnsmoothed","ObjectEffect","explanation")],file="data/explanations_longfiller.tsv",sep="\t",row.names=F,quote=F)
head(r)
t
head(t)
t = as.data.frame(prop.table(table(d$AllState,d$Item),mar=2))
t = t[t$Var1 == 1,]
row.names(t) = t$Var2
nrow(t)
row.names(t) = t$Var2
head(paste(r$object,r$effect))
r$AllPrior = t[paste(r$effect,r$object),]$Freq
head(r)
t = as.data.frame(prop.table(table(d$response,d$Item),mar=2))
exps = ddply(t, .(Var2), summarize, expectation=sum(as.numeric(as.character(Var1))*Freq))
row.names(exps) = exps$Var2
r$PriorExpectationUnsmoothed = exps[paste(r$effect,r$object),]$expectation/100
save(r, file="data/r.RData")
write.table(r[r$quantifier == "All",c("AllPrior","PriorExpectationUnsmoothed","ObjectEffect","explanation")],file="data/explanations_all.tsv",sep="\t",row.names=F,quote=F)
## WHAT DO PEOPLE SAY ABOUT "SOME"?
write.table(r[r$quantifier == "Some",c("AllPrior","PriorExpectationUnsmoothed","ObjectEffect","explanation")],file="data/explanations_some.tsv",sep="\t",row.names=F,quote=F)
## WHAT DO PEOPLE SAY ABOUT "NONE"?
write.table(r[r$quantifier == "None",c("AllPrior","PriorExpectationUnsmoothed","ObjectEffect","explanation")],file="data/explanations_none.tsv",sep="\t",row.names=F,quote=F)
## WHAT DO PEOPLE SAY ABOUT FILLERS?
write.table(r[r$quantifier == "short_filler",c("AllPrior","PriorExpectationUnsmoothed","ObjectEffect","explanation")],file="data/explanations_shortfiller.tsv",sep="\t",row.names=F,quote=F)
write.table(r[r$quantifier == "long_filler",c("AllPrior","PriorExpectationUnsmoothed","ObjectEffect","explanation")],file="data/explanations_longfiller.tsv",sep="\t",row.names=F,quote=F)
setwd("~/cogsci/projects/stanford/projects/sinking_marbles/sinking-marbles/experiments/11_sinking-marbles-normal/results/")
source("rscripts/helpers.r")
r = read.table("data/sinking_marbles.tsv", sep="\t", header=T, quote="")
r$trial = r$slide_number_in_experiment - 2
r = r[,c("workerid", "rt", "effect", "cause","language","gender.1","age","gender","other_gender","quantifier", "object_level", "response", "object","num_objects","trial","enjoyment","asses","comments")]
d = read.table("~/cogsci/projects/stanford/projects/sinking_marbles/sinking-marbles/experiments/1_sinking-marbles-prior/results/data/sinking-marbles-prior.tsv", sep="\t", header=T)
#' get items and priors
d$Item = paste(d$effect,d$object)
d$AllState = as.factor(ifelse(d$response == 100,1,0))
t = as.data.frame(prop.table(table(d$AllState,d$Item),mar=2))
t = t[t$Var1 == 1,]
row.names(t) = t$Var2
#' add prior all-state probability to megaframe
r$AllPrior = t[paste(r$effect,r$object),]$Freq
#' get unsmoothed prior expectation
t = as.data.frame(prop.table(table(d$response,d$Item),mar=2))
exps = ddply(t, .(Var2), summarize, expectation=sum(as.numeric(as.character(Var1))*Freq))
row.names(exps) = exps$Var2
#' add prior expectation to megaframe
r$PriorExpectationUnsmoothed = exps[paste(r$effect,r$object),]$expectation/100
r$Half = as.factor(ifelse(r$trial < 16, 1, 2))
r$Quarter = as.factor(ifelse(r$trial < 8, 1, ifelse(r$trial < 16, 2, ifelse(r$trial < 24, 3, 4))))
summary(r)
r$Item = as.factor(paste(r$object,r$effect))
table(r$Item)
r$PriorBin = cut(r$Prior,breaks=c(0,quantile(r$AllPrior)))
save(r, file="data/r.RData")
ggplot(aes(x=gender.1), data=r) +
geom_histogram()
ggplot(aes(x=rt), data=r) +
geom_histogram() +
scale_x_continuous(limits=c(0,20000))
ggplot(aes(x=age), data=r) +
geom_histogram()
ggplot(aes(x=enjoyment), data=r) +
geom_histogram()
ggplot(aes(x=asses), data=r) +
geom_histogram()
ggplot(aes(x=quantifier), data=r) +
geom_histogram()
head(r$comments)
unique(r$comments)
setwd("~/cogsci/projects/stanford/projects/sinking_marbles/sinking-marbles/experiments/11_sinking-marbles-normal/results/")
p=ggplot(r, aes(x=response)) +
geom_histogram() +
facet_grid(workerid~quantifier)
ggsave("graphs/by-subject-variation.pdf",width=10,height=45)
p
ggplot(r,aes(x=Item,fill=quantifier)) +
geom_histogram() +
theme(axis.text.x=element_text(angle=45,vjust=1,hjust=1))
ggsave(file="graphs/trial_histogram.pdf",height=9,width=13)
#
ggplot(r, aes(x=Prior, y=ProportionResponse, color=quantifier)) +
geom_point() +
#geom_errorbar(aes(ymin=YMin,ymax=YMax)) +
geom_smooth() +
scale_y_continuous(breaks=seq(0,1,0.1))
t = prop.table(table(r$Item,r$quantifier,r$response))
head(t)
t = prop.table(table(r$Item,r$quantifier,r$response),mar=c(1,2))
head(t)
t = as.data.frame(prop.table(table(r$Item,r$quantifier,r$response),mar=c(1,2)))
head(t)
t[t$Var1 == "backpacks blew away" & t$Var2 == "All",]
t[t$Var1 == "backpacks blew away" & t$Var2 == "Some",]
t[t$Var1 == "backpacks blew away" & t$Var2 == "None",]
colnames(t) = c("Item","Quantifier","Response","Proportion")
t = subset(t, Response == "yes")
t = droplevels(t)
ggplot(t, aes(x=Quantifier,y=Proportion,)) +
geom_bar(stat="identity") +
facet_wrap(~Item)
ggsave(file="graphs/proportion_yes_byitem.pdf")
ggsave(file="graphs/proportion_yes_byitem.pdf",width=20,height=15)
ggplot(t, aes(x=Quantifier,y=Proportion,)) +
geom_bar(stat="identity") +
facet_wrap(~Item) +
theme(axis.text.x=element_text(angle=45,vjust=1,hjust=1))
ggsave(file="graphs/proportion_yes_byitem.pdf",width=20,height=15)
head(r)
t = as.data.frame(prop.table(table(r$PriorExpectationUnsmoothed,r$quantifier,r$response),mar=c(1,2)))
colnames(t) = c("PriorExpectation","Quantifier","Response","Proportion")
t = subset(t, Response == "yes")
t = droplevels(t)
ggplot(t, aes(x=Quantifier,y=Proportion,)) +
geom_bar(stat="identity") +
facet_wrap(~PriorExpectation) +
theme(axis.text.x=element_text(angle=45,vjust=1,hjust=1))
ggplot(t, aes(x=Quantifier,y=Proportion,)) +
geom_bar(stat="identity") +
facet_wrap(~as.factor(as.character(round(as.numeric(as.character(PriorExpectation)),4))) +
theme(axis.text.x=element_text(angle=45,vjust=1,hjust=1))
ggplot(t, aes(x=Quantifier,y=Proportion,)) +
geom_bar(stat="identity") +
facet_wrap(~as.factor(as.character(round(as.numeric(as.character(PriorExpectation)),4)))) +
theme(axis.text.x=element_text(angle=45,vjust=1,hjust=1))
as.factor(as.character(round(as.numeric(as.character(t$PriorExpectation)),4)))
str(as.factor(as.character(round(as.numeric(as.character(t$PriorExpectation)),4))))
t$PriorExp = as.factor(as.character(round(as.numeric(as.character(PriorExpectation)),5)))
t$PriorExp = as.factor(as.character(round(as.numeric(as.character(t$PriorExpectation)),5)))
str(t)
ggplot(t, aes(x=Quantifier,y=Proportion,)) +
geom_bar(stat="identity") +
facet_wrap(~PriorExp) +
theme(axis.text.x=element_text(angle=45,vjust=1,hjust=1))
ggsave(file="graphs/proportion_yes_bypriorexp.pdf",width=20,height=15)
ggplot(t, aes(x=PriorExpectation,y=Proportion,)) +
geom_point() +
facet_wrap(~Quantifier)
ggplot(t, aes(x=PriorExpectation,y=Proportion,)) +
geom_point() +
geom_smooth() +
facet_wrap(~Quantifier)
ggplot(t, aes(x=PriorExpectation,y=Proportion,group=1)) +
geom_point() +
geom_smooth() +
facet_wrap(~Quantifier)
head(t)
nrow(t)
ggsave(file="graphs/proportion_normal_bypriorexp.pdf",width=20,height=15)
t = as.data.frame(prop.table(table(r$AllPrior,r$quantifier,r$response),mar=c(1,2)))
head(t)
colnames(t) = c("AllPrior","Quantifier","Response","Proportion")
t = subset(t, Response == "yes")
t = droplevels(t)
ggplot(t, aes(x=AllPrior,y=Proportion,group=1)) +
geom_point() +
geom_smooth() +
facet_wrap(~Quantifier)
ggsave(file="graphs/proportion_normal_byallprior.pdf",width=20,height=15)
t = as.data.frame(prop.table(table(r$PriorExpectationUnsmoothed,r$quantifier,r$response),mar=c(1,2)))
head(t)
colnames(t) = c("PriorExpectation","Quantifier","Response","Proportion")
t = subset(t, Response == "yes")
t = droplevels(t)
t$PriorExp = as.factor(as.character(round(as.numeric(as.character(t$PriorExpectation)),5)))
str(t)
ggplot(t, aes(x=PriorExpectation,y=Proportion,group=1)) +
geom_point() +
geom_smooth() +
facet_wrap(~Quantifier)
ggsave(file="graphs/proportion_normal_bypriorexp.pdf")
str(t)
ggplot(t, aes(x=as.numeric(as.character(PriorExpectation)),y=Proportion,group=1)) +
geom_point() +
geom_smooth() +
facet_wrap(~Quantifier)
ggsave(file="graphs/proportion_normal_bypriorexp.pdf")
ggsave(file="graphs/proportion_normal_bypriorexp.pdf",width=10,height=6)
ggsave(file="graphs/proportion_normal_bypriorexp.pdf",width=10,height=7)
ggsave(file="graphs/proportion_normal_bypriorexp.pdf",width=11,height=7)
t = as.data.frame(prop.table(table(r$AllPrior,r$quantifier,r$response),mar=c(1,2)))
head(t)
colnames(t) = c("AllPrior","Quantifier","Response","Proportion")
t = subset(t, Response == "yes")
t = droplevels(t)
ggplot(t, aes(x=AllPrior,y=Proportion,group=1)) +
geom_point() +
geom_smooth() +
facet_wrap(~Quantifier)
ggsave(file="graphs/proportion_normal_byallprior.pdf",width=11,height=7)
ggplot(t, aes(x=as.numeric(as.character(AllPrior)),y=Proportion,group=1)) +
geom_point() +
geom_smooth() +
facet_wrap(~Quantifier)
ggsave(file="graphs/proportion_normal_byallprior.pdf",width=11,height=7)
unique(r$comments)
library(ggplot2)
library(reshape2)
library(plyr)
setwd("/Users/titlis/cogsci/projects/hyperbolicquantifiers/data/hyperbolicquantifiers/rscripts")
source("summarySE.R")
library(ggplot2)
library(reshape2)
library(plyr)
affect.priors <- read.csv("../data/affectPriors/long_v2_60.csv")
affect.priors$totalQuant <- factor(affect.priors$totalQuant)
affect.priors$eatenQuant <- factor(affect.priors$eatenQuant)
affect.priors$food <- factor(affect.priors$food, levels=c("M&M's", "cookies", "pies"))
affect.priors.long <- melt(data=affect.priors, id.vars=c("workerID", "gender", "age", "income", "language",
"order", "personA", "personB",  "food", "totalQuant", "eatenQuant"),
measure.vars=c("upset", "happy", "surprised", "neutral"))
colnames(affect.priors.long)[12] <- "affect"
colnames(affect.priors.long)[13] <- "probAffect"
affect.priors.s.means <- aggregate(data=affect.priors.long, probAffect ~ workerID, FUN=mean)
affect.priors.s.sds <- aggregate(data=affect.priors.long, probAffect ~ workerID, FUN=sd)
colnames(affect.priors.s.means)[2] <- "subjectMeans"
colnames(affect.priors.s.sds)[2] <- "subectSDs"
affect.priors.long <- join(affect.priors.long, affect.priors.s.means, by=c("workerID"))
affect.priors.long <- join(affect.priors.long, affect.priors.s.sds, by=c("workerID"))
affect.priors.long$zscore <- (affect.priors.long$probAffect - affect.priors.long$subjectMeans) / affect.priors.long$subectSDs
affect.priors.long$probit <- pnorm(affect.priors.long$zscore)
#write.csv(affect.priors.long, "../data/affectPriors/affectPriors_v2_60_probit.csv")
affect.priors.summary <- summarySE(affect.priors.long, measurevar="probit",
groupvars=c("food", "totalQuant", "eatenQuant", "affect"))
#quartz()
ggplot(affect.priors.summary, aes(x=eatenQuant, y=probit)) +
#geom_bar(stat="identity", color="black") +
geom_point(size=2, color="black") +
geom_line(aes(group=totalQuant), color="grey") +
geom_errorbar(aes(ymin=probit-se, ymax=probit+se), width=0.05) +
facet_grid(affect ~ food) +
theme_bw()
comps <- princomp(data=affect.priors, ~ upset + happy + surprised + neutral, cor=FALSE, scores=TRUE)
summary(comps)$loadings
biplot(comps)
loadings(comps)
scores <- summary(comps)$scores
affect.priors.pca <- cbind(affect.priors, scores)
affect.priors.pca.long <-  melt(data=affect.priors.pca, id.vars=c("workerID", "gender", "age", "income", "language",
"order", "personA", "personB",  "food", "totalQuant", "eatenQuant"),
measure.vars=c("Comp.1", "Comp.2", "Comp.3", "Comp.4"))
affect.priors.pca.summary <- summarySE(affect.priors.pca.long, measurevar="value",
groupvars=c("food", "totalQuant", "eatenQuant", "variable"))
ggplot(affect.priors.pca.summary, aes(x=eatenQuant, y=value)) +
#geom_bar(stat="identity", color="black") +
geom_point(size=2, color="black") +
geom_line(aes(group=totalQuant), color="grey") +
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=0.05) +
facet_grid(variable ~ food) +
theme_bw()
ggplot(affect.priors.pca, aes(x=Comp.3)) +
geom_histogram(binwidth=0.05)
scores.z <- scale(scores)
affect.priors.pca.z <- cbind(affect.priors, scores.z)
affect.priors.pca.z.long <-  melt(data=affect.priors.pca.z, id.vars=c("workerID", "gender", "age", "income", "language",
"order", "personA", "personB",  "food", "totalQuant", "eatenQuant"),
measure.vars=c("Comp.1", "Comp.2", "Comp.3", "Comp.4"))
affect.priors.pca.z.summary <- summarySE(affect.priors.pca.z.long, measurevar="value",
groupvars=c("food", "totalQuant", "eatenQuant", "variable"))
ggplot(affect.priors.pca.z.summary, aes(x=eatenQuant, y=value)) +
#geom_bar(stat="identity", color="black") +
geom_point(size=2, color="black") +
geom_line(aes(group=totalQuant), color="grey") +
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=0.05) +
facet_grid(variable ~ food) +
theme_bw()
#
scores.probit <- pnorm(scores.z)
affect.priors.pca.probit <- cbind(affect.priors, scores.probit)
affect.priors.pca.probit.long <-  melt(data=affect.priors.pca.probit, id.vars=c("workerID", "gender", "age", "income", "language",
"order", "personA", "personB",  "food", "totalQuant", "eatenQuant"),
measure.vars=c("Comp.1", "Comp.2", "Comp.3", "Comp.4"))
affect.priors.pca.probit.summary <- summarySE(affect.priors.pca.probit.long, measurevar="value",
groupvars=c("food", "totalQuant", "eatenQuant", "variable"))
ggplot(affect.priors.pca.probit.summary, aes(x=eatenQuant, y=value)) +
#geom_bar(stat="identity", color="black") +
geom_point(size=2, color="black") +
geom_line(aes(group=totalQuant), color="grey") +
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=0.05) +
facet_grid(variable ~ food) +
theme_bw()
food <- read.csv("../data/hyperbole/long_v3.csv")
food$food <- factor(food$food, levels=c("M&M's", "cookies", "pies"))
food$totalQuant <- factor(food$totalQuant)
food$eatenQuant <- factor(food$eatenQuant)
# Subject level
#quartz()
ggplot(food, aes(x=eatenQuant, y=probability, color=quantifier, shape=food)) +
geom_point(size=2) +
geom_line(aes(group=food)) +
theme_bw() +
facet_wrap(~workerID, ncol=4)
food.summary <- summarySE(food, measurevar="probability",
groupvars=c("food", "quantifier", "eatenQuant"))
#quartz()
ggplot(food.summary, aes(x=eatenQuant, y=probability, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=probability-se, ymax=probability+se), width=0.05) +
theme_bw() +
facet_grid(.~food)
head(food)
priors.summary <- read.csv("../data//priors//priorMeans_v2.csv")
priors.summary$X <- NULL
priors.summary$quantifier <- "prior"
priors.summary$totalQuant <- NULL
priors.summary$food <- factor(priors.summary$food, levels=c("M&M's", "cookies", "pies"))
ggplot(priors.summary, aes(x=eatenQuant, y=probability)) +
geom_point(size=2) +
geom_line(aes(group=food)) +
geom_errorbar(aes(ymin=probability-se, ymax=probability+se), width=0.05) +
theme_bw() +
facet_grid(.~food)
food.summary <- rbind(food.summary, priors.summary)
ggplot(food.summary, aes(x=eatenQuant, y=probability, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=probability-se, ymax=probability+se), width=0.05) +
theme_bw() +
facet_grid(.~food) +
scale_color_manual(values=c("#ff6666", "#66cccc", "gray"))
head(food)
head(priors.summary)
summary(food)
summary(priors.summary)
head(priors.summary)
rownames(priors.summary) = paste(priors.summary$food,priors.summary$eatenQuant)
tmp = ddply(priors.summary, .(food), summarize, expectation=sum(eatenQuant*probability))
head(tmp)
rownames(tmp) = tmp(food)
rownames(tmp) = tmp$food
food$prior_expectation = tmp[as.character(food$food),]$expectation
head(food)
alleaten = subset(food, quantifier == "all")
summary(food)
alleaten = subset(food, quantifier == "all" & eatenQuant == "10")
alleaten = droplevels(alleaten)
nrow(alleaten)
alleaten
m = lmer(probability ~ prior_expectation + (1+prior_expectation|workerID))
m = lmer(probability ~ prior_expectation + (1+prior_expectation|workerID),data=alleaten)
m = lmer(probability ~ prior_expectation + (1|workerID),data=alleaten)
summary(m)
affect <- read.csv("../data/hyperbole-affect/long_v4.csv")
# drop rows that contain null value
affect <- subset(affect, surprised!="null")
affect$eatenQuant <- factor(affect$eatenQuant)
affect.long <- melt(data=affect, id.vars=c("workerID", "gender", "age", "income", "language", "order", "personA", "personB",
"food", "totalQuant", "eatenQuant", "quantifier"),
measure.vars=c("upset", "happy", "surprised", "neutral"))
colnames(affect.long)[13] <- "affect"
colnames(affect.long)[14] <- "probAffect"
#########################
# Z score ratings
#########################
affect.s.means <- aggregate(data=affect.long, probAffect ~ workerID, FUN=mean)
colnames(affect.s.means)[2] <- "subjectMean"
affect.s.sds <- aggregate(data=affect.long, probAffect ~ workerID, FUN=sd)
colnames(affect.s.sds)[2] <- "subjectSDs"
affect.long <- join(affect.long, affect.s.means, by="workerID")
affect.long <- join(affect.long, affect.s.sds, by="workerID")
affect.long$zscored <- (affect.long$probAffect - affect.long$subjectMean) / affect.long$subjectSDs
affect.long$probit <- pnorm(affect.long$zscored)
affect.summary <- summarySE(affect.long, measurevar="probit", groupvars=c("food", "eatenQuant", "quantifier", "affect"))
ggplot(affect.summary, aes(x=eatenQuant, y=probit, color=quantifier))+
geom_point() +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=probit-se, ymax=probit+se), width=0.05) +
facet_grid(food~affect) +
theme_bw()
# rbind with affect priors to plot everything
affect.summary <- summarySE(affect.long, measurevar="probAffect", groupvars=c("food", "eatenQuant", "quantifier", "affect"))
affect.priors <- read.csv("../data/affectPriors/affectPriors_v2.csv")
affect.priors$X <- NULL
affect.priors$totalQuant <- NULL
affect.priors$quantifier <- "prior"
affect.summary <- rbind(affect.summary, affect.priors)
affect.summary <- join(affect.summary, affect.priors, by=c("food", "eatenQuant", "affect"))
affect.summary$quantifier <- factor(affect.summary$quantifier, levels=c("all", "some", "none", "prior"))
ggplot(affect.summary, aes(x=eatenQuant, y=probAffect, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=probAffect-se, ymax=probAffect+se), width=0.05) +
facet_grid(food~affect) +
theme_bw() +
scale_color_manual(values=c("#ff6666", "#66cccc", "black", "gray"))
# Join with affect priors for differences
affect.summary <- summarySE(affect.long, measurevar="probAffect", groupvars=c("food", "eatenQuant", "quantifier", "affect"))
affect.priors <- read.csv("../data/affectPriors/affectPriors_v2.csv")
affect.priors$X <- NULL
affect.priors$totalQuant <- NULL
colnames(affect.priors)[5] <- "affectPrior"
affect.summary <- join(affect.summary, affect.priors, by=c("food", "eatenQuant", "affect"))
affect.summary$difference <- affect.summary$probAffect - affect.summary$affectPrior
affect.summary$quantifier <- factor(affect.summary$quantifier, levels=c("all", "some", "none"))
ggplot(affect.summary, aes(x=eatenQuant, y=difference, color=quantifier)) +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
facet_grid(food~affect) +
theme_bw()  +
scale_color_manual(values=c("#ff6666", "#66cccc", "black"))
#================PCA using dimensions from priors
scores.posterior <- predict(comps, affect)
#### z score and pnorm
scores.posterior.probit <- pnorm(scale(scores.posterior))
affect.pca <- cbind(affect, scores.posterior.probit)
affect.pca.long <-  melt(data=affect.pca, id.vars=c("workerID", "gender", "age", "income", "language",
"order", "personA", "personB",  "food",
"totalQuant", "eatenQuant", "quantifier"),
measure.vars=c("Comp.1", "Comp.2", "Comp.3", "Comp.4"))
affect.pca.summary <- summarySE(affect.pca.long, measurevar="value",
groupvars=c("food", "totalQuant", "eatenQuant", "quantifier", "variable"))
affect.pca.summary$quantifier <- factor(affect.pca.summary$quantifier, levels=c("all", "some", "none"))
ggplot(affect.pca.summary, aes(x=eatenQuant, y=value, color=quantifier)) +
#geom_bar(stat="identity", color="black") +
geom_point(size=2) +
geom_line(aes(group=quantifier)) +
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=0.05) +
facet_grid(variable ~ food) +
theme_bw() +
scale_color_manual(values=c("#ff6666", "#66cccc", "black"))
#############################################################
# FIT MODEL
#############################################################
r.tables <- data.frame(modelName=NULL, r = NULL)
f.names <- read.csv("../model/parsed_outputs_PCA_mixedGoals_freeParams/filenames.txt", header=FALSE)
for (name in f.names$V1) {
model <- read.csv(paste("../model/parsed_outputs_PCA_mixedGoals_freeParams/", name, sep=""))
model$food <- factor(model$food, levels=c("M&M's", "cookies", "pies"))
model.state$sd <- 0
ls()
head(affect.priors)
nrow(affect.priors)
affect.priors <- read.csv("../data/affectPriors/long_v2_60.csv")
nrow(affect.priors)
head(affect.priors)
summary(affect.priors$totalQuant)
m = lmer(upset ~ eatenQuant + (1|workerID) + (1|food), data=affect.priors)
summary(m)
m = lmer(upset ~ eatenQuant + (1|workerID) , data=affect.priors)
summary(m)
m = lmer(upset ~ eatenQuant + (1|workerID) + (1|food), data=affect.priors)
summary(m)
round(5.671e-02, 2)
round(2.824e-03)
round(2.824e-03,2)
round(2.824e-03,3)
head(food)
affect <- read.csv("../data/hyperbole-affect/long_v4.csv")
# drop rows that contain null value
affect <- subset(affect, surprised!="null")
affect.long <- melt(data=affect, id.vars=c("workerID", "gender", "age", "income", "language", "order", "personA", "personB",
"food", "totalQuant", "eatenQuant", "quantifier"),
measure.vars=c("upset", "happy", "surprised", "neutral"))
colnames(affect.long)[13] <- "affect"
colnames(affect.long)[14] <- "probAffect"
head(affect.long)
nrow(affect.long)
dd = subset(affect.long, eatenQuant != 10)
nrow(dd)
summary(dd)
dd = subset(affect.long, eatenQuant != 10 & affect == "upset" & quantifier != "none") # exclude 140 cases of all items eaten, non-upsetness affect, and "none", to get only not all items eaten, upsetness, and some/all
nrow(affect.long)
nrow(dd)
1760-366
dd = droplevels(dd)
summary(dd)
m = lmer(probAffect ~ quantifier + (1|workerID) + (1|food), data=dd)
summary(m)
m = lmer(probAffect ~ quantifier +eatenQuant + (1|workerID) + (1|food), data=dd)
summary(m)
m = lmer(probAffect ~ quantifier + eatenQuant + (1+quantifier|workerID) + (1|food), data=dd)
summary(m)
m = lmer(probAffect ~ quantifier + eatenQuant + (1+quantifier+ eatenQuant|workerID) + (1|food), data=dd)
summary(m)
